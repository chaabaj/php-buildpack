#!/usr/bin/env bash

# fail hard
set -o pipefail
# fail harder
set -eu

php_version=${1:=7.4}
php_series="$(echo $php_version | cut -d '.' -f1,2)"
# https://blackfire.io/docs/up-and-running/installation?action=install&mode=full&location=local&os=manual&language=php#install-the-php-probe
#
# → Select "Linux Binary", 64 bits, the right PHP version and you'll se the last version of the probe
blackfire_probe_version=1.50.0
# https://blackfire.io/docs/up-and-running/installation?action=install&mode=full&location=local&os=manual&language=php#install-the-packages
#
# → Select "Linux Binary", 64 bits and you'll see the last version
blackfire_agent_version=1.46.0
bin_dir=${PREFIX}/bin

# Blackfire Probe
curl --location --output blackfire.so \
  "https://packages.blackfire.io/binaries/blackfire-php/${blackfire_probe_version}/blackfire-php-linux_amd64-php-$(echo $php_series | tr -d '.').so"

mkdir -p ${EXT_DIR}
mv blackfire.so ${EXT_DIR}/blackfire.so

# AGENT
curl --user-agent "Scalingo" --output agent.tar.gz \
  --dump-header - --location --silent \
  https://blackfire.io/api/v1/releases/agent/linux/amd64

echo "-----> Packaging bin/blackfire-agent ${blackfire_agent_version}..."

mkdir -p ${PREFIX}/var/blackfire/run
mkdir -p ${PREFIX}/etc/blackfire
echo -e "[blackfire]\nserver-id=f1abf3a8-3f85-4743-99b2-97f066c099b9\nserver-token=5ecbc6486e9db6b780a0c0a9ef1e244709e632996fe9105cb9075ab2826944d5" > ${PREFIX}/etc/blackfire/agent.ini
mkdir -p ${bin_dir}

tar -zxf agent.tar.gz
chmod +x agent
cp agent ${bin_dir}/blackfire-agent
rm agent.tar.gz agent agent.sha1

# CLI
echo "-----> Packaging bin/blackfire ${blackfire_agent_version}..."
curl https://packages.blackfire.io/binaries/blackfire-agent/${blackfire_agent_version}/blackfire-cli-linux_amd64 > ${bin_dir}/blackfire
chmod +x ${bin_dir}/blackfire

find ${PREFIX} -type f \( -executable -o -name '*.a' \) -exec sh -c "file -i '{}' | grep -Eq 'application/x-(archive|executable|sharedlib); charset=binary'" \; -print | xargs strip --strip-unneeded

# gets sourced on container boot
cat > ${PREFIX}/bin/profile.blackfire.sh <<'EOF'
if [[ -n "$BLACKFIRE_SERVER_TOKEN" && -n "$BLACKFIRE_SERVER_ID" ]]; then
	if [[ -f "/app/vendor/php/bin/blackfire-agent" ]]; then
		touch /app/vendor/php/var/blackfire/run/agent.sock
		/app/vendor/php/bin/blackfire-agent -config=/app/vendor/php/etc/blackfire/agent.ini -socket="unix:///app/vendor/php/var/blackfire/run/agent.sock" &
	else
		echo >&2 "WARNING: Add-on 'blackfire' detected, but PHP extension not yet installed. Push an update to the application to finish installation of the add-on; an empty change ('git commit --allow-empty') is sufficient."
	fi
fi
EOF

mkdir -p ${PREFIX}/etc/php/conf.d
cat > ${PREFIX}/etc/conf.d/blackfire.ini <<'EOF'
extension = blackfire.so

blackfire.server_token = ${BLACKFIRE_SERVER_TOKEN}
blackfire.server_id = ${BLACKFIRE_SERVER_ID}
blackfire.agent_socket = "unix:///app/vendor/php/var/blackfire/run/agent.sock"
EOF
